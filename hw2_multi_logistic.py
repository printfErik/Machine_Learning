# -*- coding: utf-8 -*-
"""hw2_multi_logistic.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sHuk10z8RSiJcTA16oiuUGJBwcz-LQXf
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
from numpy import linalg as LA

# training model using mini-batch gradient descent
def mnist_train(X, y, learning_rate):
  X = X.astype(float)
  y = y.astype(float)
  batch_size = 32
  weight = np.random.uniform(0,1,(10,64))
  # number if iteration is 10
  for i in range(10):
    batch_index = np.random.choice(len(X),batch_size,replace=False)
    for j in batch_index:
      x = X[j].reshape(-1,1)
      y_temp = np.zeros((10,1))
      y_temp[int(y[j])-1] = 1
      para = np.matmul(weight,x)
      para = para - np.max(para)
      y_tilt = np.exp(para) / (np.sum(np.exp(para)))
      weight -= learning_rate * (np.matmul((y_tilt - y_temp), x.T))

  return weight

# predict
def mnist_predict(weight,X):
  label = np.argmax(np.matmul(weight,X))
  return label+1


# cleaning data
test_data = pd.read_csv("mfeat_test.csv",header = None).values

train_data = pd.read_csv("mfeat_train.csv",header = None).values

X_train = train_data[1:,1:-1]
y_train = train_data[1:,-1]
X_test = test_data[1:,1:-1]
y_test = test_data[1:,-1]


for i in range(len(X_train)):
  X_train[i] = X_train[i].astype(float)
  

for j in range(len(X_test)):
  X_test[j] = X_test[j].astype(float)

y_train = y_train.astype(int)
y_test = y_test.astype(int)


weight = mnist_train(X_train,y_train,0.1)
correct = 0 

# compute confusionMatrix
confusionMatrix = np.zeros((10,10),dtype=int)
for i in range(len(X_test)):
  digit = X_test[i]   
  label = y_test[i]   
  predict = mnist_predict(weight,digit)
  if (predict == label):
    correct += 1 
  confusionMatrix[predict-1, label-1]+=1
print(confusionMatrix)
print("accuracy: ", correct / len(X_test))

np.savetxt("multi_logistic_weights.txt",weight)
from google.colab import files

with open('example.txt', 'w') as f:
  f.write('some content')

files.download('multi_logistic_weights.txt')

